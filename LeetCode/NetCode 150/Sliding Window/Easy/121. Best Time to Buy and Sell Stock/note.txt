The Used Pattern:
  Sliding Window:
    Focuses on a subArray or subString within a given array/string. 
    The window expands or contracts dynamically to solve the problem. 
    Often involving sums, averages, or unique elements within the window.
    Key Characteristics:
      Usage:
        Problems where you need to examine all contiguous subArrays or subStrings.
        Optimizing results within a range or limit.
      Window Movement:
        A "window" is defined by two pointers. 
          The start and end of the window are adjusted dynamically.
        The size of the window can increase, decrease, or stay fixed based on the problem.
      Examples:
        Maximum sum of subArray of size k (fixed window size).
        Longest subString with unique characters (dynamic window size).
        Smallest subArray with a sum greater than or equal to a target.
      Complexity:
        Typically O(n), as each pointer moves through the array once.:
  Time And Space Complexity:
    Time Complexity value is O(n)
    Space Complexity value is O(1) 